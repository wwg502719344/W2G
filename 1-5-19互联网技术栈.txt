1:no-sql
	当SQL满足不了你的需求或者SQL 已经不是必须的或者最佳的选择时，就是你考虑这类NoSQL 的时候了。
	在一些对数据集的分析中，传统的关系型数据库的计算成本变得很大。
	特点：易扩展、大数据、高可用、高性能、灵活性
	总结：mongoDB做高性能数据库，Redis做缓存，HBase做大数据分析
	
	1-HBase:
		用途：
			1:特别适用于简单数据写入（如“消息类”应用）和海量、结构简单数据的查询（如“详单类”应用）。特别地，适合稀疏表。（个人觉得存个网页内容是极好极好的）
			2:作为MapReduce的后台数据源，以支撑离线分析型应用。
		
		场景：
			Facebook的消息类应用，包括Messages、Chats、Emails和SMS系统，用的都是HBase；
			淘宝的WEB版阿里旺旺，后台是HBase；小米的米聊用的也是HBase；

			
	2：mongodb：
		1：是一个介于关系型和非关系型之间的一个产品吧，类SQL语言，支持索引 
		2：MongoDb在类SQL语句操作方面目前比HBase具备更多一些优势，有二级索引，支持相比于HBase更复杂的集合查找等。
		3：BSON的数据结构使得处理文档型数据更为直接。支持复杂的数据结构
		4：MongoDb也支持mapreduce，但由于HBase跟Hadoop的结合更为紧密，Mongo在数据分片等mapreduce必须的属性上不如HBase这么直接，需要额外处理。
		
		
	3：redis：
		1：Redis为内存型KV系统，处理的数据量要小于HBase与MongoDB
		2：Redis很适合用来做缓存，但除此之外，它实际上还可以在一些“读写分离”的场景下作为“读库”来用，特别是用来存放Hadoop或Spark的分析结果。
		3：Redis的读写性能在100,000 ops/s左右，时延一般为10～70微妙左右；而HBase的单机读写性能一般不会超过1,000ops/s，时延则在1～5毫秒之间。
		4：Redis的魅力还在于它不像HBase只支持简单的字符串，他还支持集合set，有序集合zset和哈希hash

	
	
	
	
	
	
2：pinpoint：
	1-作用：
		一个分布式事务跟踪系统的平台，用于基于java的大规模分布式系统，
		通过跟踪分布式应用之间的调用来提供解决方案，以帮助分析系统的总体结构和内部模块之间如何相互联系
		
	2-构成：
		有3个主要组件组成：日志收集器[Collector]、控制台[Web]、代理[Agent]
		采用HBase进行存储。 Collector和Web都是WAR包,Agent采用一个JAVA应用程序加载。

	3-特点
		分布式事务跟踪，跟踪跨分布式应用的消息 自动检测应用拓扑，帮助你搞清楚应用的架构 水平扩展以便支持大规模服务器集群 
		提供代码级别的可见性以便轻松定位失败点和瓶颈 使用字节码增强技术，添加新功能而无需修改代码
