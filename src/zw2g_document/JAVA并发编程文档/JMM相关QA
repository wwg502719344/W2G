Q1:两个线程调用一段代码，如何才能保证指令重排序导致执行的乱序

Q2:如果两个线程并发的访问了某个方法，那么相对应的这两个线程都会生成这两个方法的栈桢，
指令重排序是发生在这两个栈桢出栈前（在方法中进行重排序）还是出栈后，统一编译成指令集
在进行重排序执行

Q3:两个线程先后调用不同的方法，那么指令重排序会对两个不同方法的执行混在一起进行重排序吗
Q4:

A1:h-b原则严格保护多线程执行的内存可见性，涉及voilate修饰的变量，写一定发生在读的前面，
这样才能保证读数据的可靠性，在和同事的讨论中，我引入了栈桢的概念，实际上这种概念是错误的，
因为栈桢只针对一个线程的调用，在多线程的环境下，这种概念的引用是完全错误的，因为多线程就有
多个栈桢，这是毫无关联交集的两个东西

A2:...

A3:我认为是有可能的，首先基于栈桢的概念，压栈和出栈是有顺训的，在指令集里对应的就是两个命令
出栈后的代码应该是放在一个临界区中，临界区中的代码并不是按顺序执行，而是乱序执行，临界区的
代码会不断增加，但是临界区的代码维护h-b原则