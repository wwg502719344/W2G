
============================================QUESTION===========================================
Q0:为什么要使用线程池


Q1:线程数和核心线程数有什么关系？


Q2:线程池中的核心线程是如何循环利用的，如何启用闲置线程


Q3:线程池如何控制线程最大并发数


Q4:线程池如何实现延时执行、定时循环执行的策略等


Q5:线程池检查核心线程池中,如果线程没有全部执行任务，为什么不是利用闲置的而是创建新的线程呢？




============================================ANSWER=============================================
A0:当创建一个线程和销毁一个线程所需要的时间大于这个线程的执行时间，那么这就是一个资源上的浪费，线程池中保存了空闲的线程，
可以利用空闲的线程，避免创建销毁的资源浪费


A1:核心线程数corePoolSize,指的是当线程数量少于corePoolSize的时候，所有创建的线程都是核心线程(需要获取全局锁),
当大于线程数的时候，创建的线程就是非核心线程
核心线程创建完成后会一直存活，如果没有相应的任务，则会标记为空闲状态
如果指定的allowCoreThreadTimeOut被设置为ture，表示在一定的时间范围后，如果不干活将会被注销
参考资料:
https://liuzho.github.io/2017/04/17/%E7%BA%BF%E7%A8%8B%E6%B1%A0%EF%BC%8C%E8%BF%99%E4%B8%80%E7%AF%87%E6%88%96%E8%AE%B8%E5%B0%B1%E5%A4%9F%E4%BA%86/
