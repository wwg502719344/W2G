笔记模块：
实现容错的原因
    当微服务所依赖的服务不可用时，大量的请求，大量的并发不做任何处理的等待，会耗尽系统的资源，拖垮自身的服务

雪崩效应
    微服务架构通常包含了多个服务层，微服务之间通过网络进行通信，从而支撑起整个应用系统
    当发生基础服务故障的时候，可能会导致生产者A的消费者B无法调用，从而导致需要调用消费者B的消费者C和D都无法
调用，导致不可用逐渐放大

如何容错
    防止产生雪崩效应的手段就是要有一个强大的容错机制
    1:为网络请求设置超时
    2:使用断路器模式

Hystrix
    实现超时机制和断路器模式的工具
    1:包裹请求-用到了命令模式
    2:跳闸机制-当错误率达到了一定的程度，Hystrix会自动或者手动停止请求该服务一段时间
    3:资源隔离-Hystix为每个依赖都维护了一个线程池，当请求数量达到线程池数量，就会立即拒绝请求
    4:监控
    5:回退机制-当请求失败，超时，被拒绝的时候，执行回退逻辑
    6:自我修复







问题模块：

问题1：
    通过UserFeignClient进行降级处理的时候，如果掐断user服务，理论上应该出现降级情况，服务应该主动去触发fallbackFactory
指定的降级类，但是实际情况确实返回connect timed out
解决方案:
    未开启Hystrix导致降级失败，需要在yml文件中添加feign.hystrix.enabled=true开启hystrix服务。ps(多看官方文档)



问题2：
    项目添加Hystrix监控，理论上在访问接口后访问ip:端口号/hystrix.stream即可查看Hystrix相关参数，但是在添加了
相关maven，包括在启动文件上添加@EnableHystrixDashboard后依然无效，访问ip:端口号/hystrix.stream提示404

解决方案：
    提示404，猜测可能是服务没有启动成功导致，在网上查了下，发现缺少 @Configuration 的配置类去启动，然后添加
HystrixConfig 配置类，注入servlet，在此访问，即可访问到相关监控数据
添加HystrixConfig 配置类是因为springboot的默认路径不是 "/hystrix.stream"，只要在自己的项目里配置上下面的servlet就可以了，
相关查阅资料：
https://www.cnblogs.com/wangdaijun/p/8891220.html
https://www.cnblogs.com/java-zhao/p/5813439.html



问题3：
    监控图形化界面显示Unable to connect to Command Metric Stream.
解决方案：
    http://ip:端口/hystrix.stream,之前写的是接口名称



问题4：
    Linux安装了rabbitmq，访问主页guest无法登陆
解决方案：
    原因是因为现在的版本只允许guest在localhost模式下登陆，通过ip的方式无法登陆，可以通过创建一个新用户，然后
给这个用户最高权限，就可以顺利登陆了



问题5:
    配置了actuator，却无法访问到相应的结果
解决方案:
    这种问题一般缺少2点，1是yml没有配置开启，2是springboot2.0以上访问相应插件的内容需要在访问路径上添加
插件名称。http://localhost:8100/actuator/routes即可，类似的还有




