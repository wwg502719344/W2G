命令模式
将请求和接受操作进行解耦，通过抽象构造一个接受请求，执行请求的命令类
Hystrixd的实现则运用了命令模式

Hystrix源码需要解决的问题
当服务器之间的调用存在问题，请求被积压在某个服务上得不到释放，随着积压的请求越来越多，资源池中的线程资源被耗尽
将会直接导致服务的不可用，Hystrix的作用就是容灾

Hystrix则通过运用命令模式，将请求包裹调用，通过将请求操作和接受操作进行解耦操作，实现对命令请求的控制

Hystrix断路器实现逻辑
当有请求到来的时候，判断熔断器是否已经打开
熔断器打开的状态下允许一部分流量进来验收依赖是否可用
在一定的时间内允许一个请求进入

hystrix的核心三大件
1:HystrixCommond,HystrixObservableCommond,创建这两个类用来表达对依赖服务的调用，这两个类都传递了
相关参数，这两个类都是通过观察者模式实现了对请求命令的封装和调用
2:HystrixCircuitBreak:断路器的核心组件，用来实现针对请求断路开启关闭熔断回退的作用







===============================相关文档=========================================================
命令模式基础:
https://blog.csdn.net/zhwyj1019/article/details/79758057
Hystrix源码分析(上)
https://www.jianshu.com/p/0649f414cfcf
Hystrix官方文档翻译
https://segmentfault.com/a/1190000016185647
HystrixCircuitBreak详解
https://segmentfault.com/a/1190000016232987
个人博客内容，值得看一看
https://segmentfault.com/u/jiuguangyinglideshaonian

===============================github相关源码=========================================================
Hystrix官方wiki
https://github.com/Netflix/Hystrix/wiki/How-it-Works
Hystrix基础类源码
https://github.com/Netflix/Hystrix/tree/master/hystrix-core/src/main/java/com/netflix/hystrix
