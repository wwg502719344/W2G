垃圾回收循环引用的问题
https://blog.csdn.net/faker____/article/details/83061673?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control

引言:
对于jvm的垃圾回收来说，存在可达性分析和引用计数法两种方式，引用计数法并不可靠，无法完成对象的回收，一般采用的都是可达性分析的方式进行垃圾回收的判断

引用计数器的缺陷
对于引用计数器来说，通过计算当期对象的引用数量来进行判断是否需要进行垃圾回收，引用计数器记录着对象对其他每一个对象的引用数，当引用指向null的时候
引用计数器就会减一，但是如果该对象

可达性分析理解
https://www.zhihu.com/question/51914583?sort=created
如果该对象没有被栈帧中的对象，也就是GCRoots引用，那么他就是可以回收的，只要GCRoots存在，那么久不会被回收

GC的方式
标记-复制:对内存中的对象进行标记，在需要GC前将标记的对象存放在另一个内存区域当中，这么做的好处就是简单高效，不会产生内存碎片，但是需要额外的内存空间
标记-清理:对内存中的对象进行标记，在需要gc的时候进行清除操作，但是会产生内存碎片
标记-整理

垃圾收集区域
Eden区和Survivor区，Survivor区分为from和to，比例为8:1:1，from和to就是用来进行标记复制算法的地方
