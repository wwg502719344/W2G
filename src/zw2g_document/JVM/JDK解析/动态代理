代理模式:
为原本的对象提供一个代理对象，就像中介一样，代理对象包括了比原始对象要多的功能，比如日志，事务操作等，
代理模式的本质则是通过调用代理类实现我们需要除开业务之外的额外操作，spring AOP就是运用了动态代理的方法
面向的是接口进行编程

静态代理
创建一个静态代理类，代理类实现目标接口，通过获取目标对象
调用代理类的业务方法，实现方法的封装
代码具体实现
http://localhost:8080/v1/jdk/staticProxy

动态代理
在静态代理中，我们的代理处理类需要实现被代理的接口，所以缺点就是代码耦合度高，想要实现代理功能需要额外
去创建很多类
动态代理中，我们不需要创建那些额外的类
通过生成指定的代理类，根据多态的理念，实现的实际是代理类的具体方法

具体代码实现
http://localhost:8080/v1/jdk/dynamicProxy


https://www.jianshu.com/p/269afd0a52e6



